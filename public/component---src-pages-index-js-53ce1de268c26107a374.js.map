{"version":3,"sources":["webpack:///./src/components/styles.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/posts.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["MainContainer","styled","div","up","PostContainer","PostTitle","h2","PostDate","span","loader","enqueue","React","createContext","Posts","data","map","post","key","id","to","slug","title","date","excerpt","query","Home","nodes","allBlogPost","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"2FAAA,oKAGaA,EAAgBC,UAAOC,IAAV,wEAAGD,CAAH,4GAMtBE,aAAG,YAMMC,EAAgBH,UAAOC,IAAV,wEAAGD,CAAH,sFAObI,EAAYJ,UAAOK,GAAV,oEAAGL,CAAH,uGAcTM,EAAWN,UAAOO,KAAV,mEAAGP,CAAH,oD,2GCtBIQ,QAAOC,QAELC,IAAMC,cAAc,I,gBCMhCC,EAlBD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OACE,kBAAC,IAAD,KACGA,EAAKC,KAAI,SAAAC,GACR,OACE,kBAAC,IAAD,CAAeC,IAAKD,EAAKE,IACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,GAAE,QAAUH,EAAKI,MAASJ,EAAKK,QAEvC,kBAAC,IAAD,KAAWL,EAAKM,MAChB,2BAAIN,EAAKO,eCdrB,sCAKO,IAAMC,EAAK,aA0BHC,UAZF,SAAC,GAIP,IAFYC,EAEb,EAHJZ,KACEa,YAAeD,MAGjB,OACE,oCACE,kBAAC,EAAD,CAAOZ,KAAMY,O,qBC1BnB,IAAsBE,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,geCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGExB,IAAMyB,cAAcC,I,+UAApB,EACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-index-js-53ce1de268c26107a374.js","sourcesContent":["import styled from 'styled-components'\nimport { up } from 'styled-breakpoints'\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-left: auto;\n\n  ${up('desktop')} {\n    margin: auto;\n    max-width: 800px;\n  }\n`\n\nexport const PostContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border-bottom: 1px solid #2f363d;\n`\n\nexport const PostTitle = styled.h2`\n  a {\n    text-decoration: none;\n    color: #fff;\n\n    &:hover {\n      text-decoration: none;\n      color: tomato;\n    }\n  }\n\n  margin-bottom: 10px;\n`\n\nexport const PostDate = styled.span`\n  margin-bottom: 20px;\n  font-size: 14px;\n  color: #777;\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { MainContainer, PostContainer, PostTitle, PostDate } from './styles'\n\nconst Posts = ({ data }) => {\n  return (\n    <MainContainer>\n      {data.map(post => {\n        return (\n          <PostContainer key={post.id}>\n            <PostTitle>\n              <Link to={`/post${post.slug}`}>{post.title}</Link>\n            </PostTitle>\n            <PostDate>{post.date}</PostDate>\n            <p>{post.excerpt}</p>\n          </PostContainer>\n        )\n      })}\n    </MainContainer>\n  )\n}\n\nexport default Posts\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Posts from '../components/posts'\n\nexport const query = graphql`\n  query MdxAllBlogPosts {\n    allBlogPost(sort: { fields: [date, title], order: DESC }) {\n      nodes {\n        id\n        slug\n        title\n        excerpt(pruneLength: 140)\n        date(formatString: \"DD MMM, YYYY\")\n      }\n    }\n  }\n`\n\nconst Home = ({\n  data: {\n    allBlogPost: { nodes }\n  }\n}) => {\n  return (\n    <>\n      <Posts data={nodes} />\n    </>\n  )\n}\n\nexport default Home\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}