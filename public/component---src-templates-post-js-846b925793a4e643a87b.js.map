{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/components/post.js","webpack:///./src/templates/post.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/styles.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["SEO","postMeta","isBlogPost","seo","site","siteMetadata","title","description","image","url","slug","defer","name","content","rel","href","property","twitterUsername","PostComponent","post","data","location","body","PageQuery","MDXRenderer","require","module","MainContainer","styled","div","up","PostContainer","PostTitle","h2","PostDate","span","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn"],"mappings":"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","file":"component---src-templates-post-js-846b925793a4e643a87b.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        url\n        twitterUsername\n        image\n      }\n    }\n  }\n`\n\nconst SEO = ({ postMeta, isBlogPost }) => {\n  const data = useStaticQuery(query)\n  const seo = data.site.siteMetadata\n  const title = postMeta.title || seo.title\n  const description = postMeta.description || seo.description\n  const image = seo.image\n  const url = postMeta.slug ? `${seo.url}${postMeta.slug}` : seo.url\n\n  return (\n    <>\n      <Helmet defer={false}>\n        {/* General tags */}\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        <link rel=\"canonical\" href={url} />\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={url} />\n        {isBlogPost ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    </>\n  )\n}\n\nexport default SEO\n","import React from 'react'\nimport { MainContainer, PostContainer, PostTitle } from './styles'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport SEO from './seo'\n\nconst PostComponent = ({ data: { post }, location }) => {\n  return (\n    <>\n      <SEO postMeta={post} isBlogPost />\n      <MainContainer>\n        <PostContainer>\n          <PostTitle>{post.title}</PostTitle>\n          <MDXRenderer>{post.body}</MDXRenderer>\n        </PostContainer>\n      </MainContainer>\n    </>\n  )\n}\n\nexport default PostComponent\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Post from '../components/post'\n\nexport default ({ location, data }) => <Post data={data} location={location} />\n\nexport const PageQuery = graphql`\n  query($id: String!, $relativeDirectory: String = \"home\") {\n    post: blogPost(id: { eq: $id }) {\n      id\n      title\n      slug\n      date(formatString: \"MMMM DD, YYYY\")\n      excerpt\n      body\n    }\n    card: file(\n      name: { eq: \"card\" }\n      relativeDirectory: { eq: $relativeDirectory }\n    ) {\n      childImageSharp {\n        fixed(height: 628) {\n          src\n        }\n      }\n    }\n  }\n`\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import styled from 'styled-components'\nimport { up } from 'styled-breakpoints'\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-left: auto;\n\n  ${up('desktop')} {\n    margin: auto;\n    max-width: 800px;\n  }\n`\n\nexport const PostContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border-bottom: 1px solid #2f363d;\n`\n\nexport const PostTitle = styled.h2`\n  a {\n    text-decoration: none;\n    color: #fff;\n\n    &:hover {\n      text-decoration: none;\n      color: tomato;\n    }\n  }\n\n  margin-bottom: 10px;\n`\n\nexport const PostDate = styled.span`\n  margin-bottom: 20px;\n  font-size: 14px;\n  color: #777;\n`\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}