{"componentChunkName":"component---src-templates-post-js","path":"/post/webpack-loader-for-fonts/","result":{"data":{"post":{"id":"fd71d561-d3bd-59e5-bea3-42d61213ba65","title":"Webpack loader for Fonts","date":"December 19, 2015","excerpt":"While I was learning  React  with  Webpack , I wanted to try with real time example. Hence I was implementing a  Bootstrap  temulate using…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Webpack loader for Fonts\",\n  \"date\": \"2015-12-19T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"While I was learning \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://facebook.github.io/react/\"\n  }), \"React\"), \" with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.github.io/\"\n  }), \"Webpack\"), \", I wanted to try with real time example. Hence I was implementing a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://getbootstrap.com/\"\n  }), \"Bootstrap\"), \"\\xA0temulate using React. There are more font awesome fonts used in Bootstrap. I was having difficulty of\\xA0including in my Webpack builder. Tried googling around, and the solution which I\\u2019ve got is like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// Font and images\\n{\\n  test: /\\\\\\\\.(woff2?|svg|jpe?g|png|gif|ico)$/,\\n  loader: \\\"url?limit=10000\\\"\\n},\\n{\\n  test: /\\\\\\\\.(ttf|eot)$/,\\n  loader: \\\"file\\\"\\n}\\n\")), mdx(\"p\", null, \"In the above code I\\u2019m using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/url-loader\"\n  }), \"url-loader\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/file-loader\"\n  }), \"file-loader\"), \". The problem\\xA0is the font-awesome fonts are rendered as, for instance\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fontawesome.woff2?v=4.3\"), \".\"), mdx(\"p\", null, \"If you see, there is a query string after the font file name. That was causing me an issue while building using webpack. It always throws an error, that my loader for the module is not found. I fixed it by using as follows:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// Font and images\\n{\\n  test: /\\\\\\\\.((woff2?|svg)(\\\\\\\\?v=\\\\[0-9\\\\]\\\\\\\\.\\\\[0-9\\\\]\\\\\\\\.\\\\[0-9\\\\]))|(woff2?|svg|jpe?g|png|gif|ico)$/,\\n  loader: 'url?limit=10000'\\n},\\n{\\n  test: /\\\\\\\\.((ttf|eot)(\\\\\\\\?v=\\\\[0-9\\\\]\\\\\\\\.\\\\[0-9\\\\]\\\\\\\\.\\\\[0-9\\\\]))|(ttf|eot)$/,\\n  loader: 'file'\\n}\\n\")), mdx(\"p\", null, \"I believe it helps someone who got stuck in this kind of situation.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"card":null},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"fd71d561-d3bd-59e5-bea3-42d61213ba65","excerpt":"While I was learning  React  with  Webpack , I wanted to try with real time example. Hence I was implementing a  Bootstrap  temulate using…","slug":"/webpack-loader-for-fonts/","title":"Webpack loader for Fonts","date":"December 19, 2015","parent":{"parent":{"relativeDirectory":"webpack-loader-for-fonts"}},"relativeDirectory":"webpack-loader-for-fonts"}}}